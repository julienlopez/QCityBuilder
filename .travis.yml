language: cpp

compiler:
  - gcc

script: ./tests.sh

before_install:
  - chmod 755 tests.sh
  - sudo add-apt-repository ppa:ubuntu-toolchain-r/test -y
  - sudo add-apt-repository ppa:ubuntu-sdk-team/ppa -y
  # - sudo add-apt-repository ppa:apokluda/boost1.53 -y
  - sudo apt-get update -qq
  - if [ "$CXX" = "g++" ]; then sudo apt-get install -qq g++-4.9; fi
  - if [ "$CXX" = "g++" ]; then sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-4.9 90; fi
  - sudo apt-get install libgtest-dev
  - sudo apt-get install google-mock
  - sudo apt-get install -qq qt5-qmake qtbase5-dev qtdeclarative5-dev libqt5webkit5-dev libsqlite3-dev qt5-default qttools5-dev-tools
  - sudo apt-get update
  - sudo apt-get install libboost1.53-dev #libboost-filesystem1.53-dev libboost-program-options1.53-dev
  - chmod 755 ci/build_gtest.sh
  - sudo ci/build_gtest.sh
  - wget http://ftp.de.debian.org/debian/pool/main/l/lcov/lcov_1.11.orig.tar.gz
  - tar xf lcov_1.11.orig.tar.gz
  - sudo make -C lcov-1.11/ install
  # Codecov
  - sudo pip install codecov

after_success:
  # Creating report
  - cd ${TRAVIS_BUILD_DIR}
  - lcov --directory lib --directory  gui --capture --no-external --output-file coverage.info # capture coverage info
  - lcov --remove coverage.info '/usr/*' --output-file coverage.info # filter out system
  - lcov --remove coverage.info '3rd_party/*' --output-file coverage.info # filter out system
  - lcov --list coverage.info #debug info
  # Uploading report to CodeCov
  - bash <(curl -s https://codecov.io/bash) || echo "Codecov did not collect coverage reports"